#!/usr/bin/perl

$program = (-x "../ashtoqd" ? "../ashtoqd" : "ashtoqd");

system('grep --quiet "#define WGS84 1" /usr/include/smartmet/newbase/NFmiGlobals.h');
$wgs84 = 1-($? >> 8);

$errors = 0;

$results = "results";

%usednames = ();

DoTest("concentration",
       "concentration",
       "data/volcano");

DoTest("boundaries",
       "boundaries",
       "-b data/volcano");

print "$errors errors\n";
exit($errors);

# ----------------------------------------------------------------------
# Run a single test
# ----------------------------------------------------------------------

sub FindFile($$)
{
    my $dir = shift;
    my $name = shift;
    my $result;
    if (-e "$dir/$name.xz") {
        $result="$name.xz";
    } elsif (-e "$dir/$name.bz2") {
        $result="$name.bz2"
    } elsif (-e "$dir/$name.gz") {
        $result="$name.gz"
    } elsif (-e "$dir/$name.zstd") {
        $result="$name.zstd"
    } elsif (-e "$dir/$name") {
        $result=$name;
    }
    return $result;
}

sub RemoveCompressionExt($)
{
    my $x = shift;
    $x =~ s/.(gz|bz2|xz|zstd)$//;
    return $x;
}

sub DoTest
{
    my($text,$name,$arguments) = @_;

    if(exists($usednames{$name}))
    {
	print "Error: $name used more than once\n";
	exit(1);
    }
    $usednames{$name} = 1;

    my $resultfile; # ) = "ashtoqd_$name";

    if($wgs84)
    {
	$resultfile = FindFile("results", "ash2oqd_$name.wgs84");
    }

    if (!defined($resultfile))
    {
	$resultfile = FindFile("results", "ash2oqd_$name");
    }

    my $tmpfile = RemoveCompressionExt($resultfile).".tmp";
    $cmd = "$program $arguments $results/$tmpfile";

    # print "$cmd\n";
    my $ret = system("$cmd >results/$tmpfile.out");
    $output = `cat results/$tmpfile.out`;

    print padname($text);

    if ($ret != 0)
    {
	++$errors;
        print " ERROR: return code $ret from ashtoqd\n";
        system("cat results/$tmpfile.out");
    }

    my($difference) = `../qddifference results/$resultfile results/$tmpfile`;
    $difference =~ s/^\s+//;
    $difference =~ s/\s+$//;

    if($difference < 0.0001)
    {
	if($difference <= 0)
	{ print " OK\n"; }
	else
	{ print " OK (diff <= $difference)\n"; }
	unlink("$results/$tmpfile");
    }
    else
    {
	++$errors;
	print " FAILED! (maxdiff = $difference)\n";
	print "( $resultfile <> $tmpfile in $results/ )\n";
    }
}

# ----------------------------------------------------------------------
# Pad the given string to 70 characters with dots
# ----------------------------------------------------------------------

sub padname
{
    my($str) = @_[0];

    while(length($str) < 70)
    {
	$str .= ".";
    }
    return $str;
}
