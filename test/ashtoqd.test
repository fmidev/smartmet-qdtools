#!/usr/bin/perl

use strict;
use warnings;
use lib ".";
use QDToolsTest;

my $program = (-x "../ashtoqd" ? "../ashtoqd" : "ashtoqd");

my $errors = 0;

my $results = "results";

my %usednames = ();

DoTest("concentration",
       "concentration",
       "data/volcano");

DoTest("boundaries",
       "boundaries",
       "-b data/volcano");

print "$errors errors\n";
exit($errors);

# ----------------------------------------------------------------------
# Run a single test
# ----------------------------------------------------------------------

sub DoTest
{
    my($text,$name,$arguments) = @_;

    if(exists($usednames{$name}))
    {
	print "Error: $name used more than once\n";
	exit(1);
    }
    $usednames{$name} = 1;

    my $resultfile = FindResult("$results", "ashtoqd_$name");
    my $tmpfile = RemoveCompressionExt($resultfile).".tmp";

    my $cmd = "$program $arguments $tmpfile";

    # print "$cmd\n";
    my $ret = system("$cmd >$tmpfile.out");

    print padname($text);

    if ($ret != 0)
    {
	++$errors;
        print " ERROR: return code $ret from ashtoqd\n";
        system("cat results/$tmpfile.out");
    }

    my ($ok, $msg) = CheckQuerydataEqual($resultfile, $tmpfile, 0.0001);
    print " $msg\n";
    if (!$ok) {
        ++$errors;
    }
}
