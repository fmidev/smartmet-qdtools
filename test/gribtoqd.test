#!/bin/sh

if [ -x ../gribtoqd ]; then
  PROG=../gribtoqd
  QDINFO=../qdinfo
else
  PROG=gribtoqd
  QDINFO=qdinfo
fi

version_suffix=
eccodes_version=$(codes_info -v)
case $eccodes_version in
    2.2*.*)
        version_suffix=2X
        ;;
    2.30.*)
        version_suffix=30
        ;;
    2.32.*)
        version_suffix=32
        ;;
esac

grep --quiet "#define WGS84 1" /usr/include/smartmet/newbase/NFmiGlobals.h
wgs84=$(expr $? == 0)
errors=0

for f in data/grib/*.grib*; do
    name=$(basename $f)
    name0=$(echo $name | sed -r 's:(\.xz|\.bz2|\.zstd|\.xz)$::')
    input=$(dirname $f)/$name0
    search=results/gribtoqd/${name0}
    if ! test -z "$version_suffix" ; then
        search="$search.$version_suffix $search"
    fi

    if [[ $wgs84 == 1 ]]; then
	search="$(for fn $search; do echo $fn.wgs84; done) $search"
    fi

    resultfiles=
    for fn in $search ; do
        for ext in '' .zstd .gz .bz2 .xz; do
            if test -e $fn.sqd$ext || test -L $fn.sqd$ext; then
                resultfiles="$resultfiles $fn.sqd$ext"
            fi
        done;
    done

    if test -z "$resultfiles" ; then
	errors=$(($errors+1))
        echo "FAILED: no expected result file found for $f"
    else
        resultfile=$(for fn in $resultfiles; do echo $fn; done | head -1);
        tmpfile=$(echo $resultfile | sed -r 's:(\.xz|\.bz2|\.zstd|\.xz)$::').tmp
        case $resultfile in
            *.xz) CMP="xzcmp $resultfile $tmpfile" ;;
            *.bz2) CMP="bzcat $resultfile | cmp --quiet - $tmpfile" ;;
            *.gz) CMP="zcat $resultfile | cmp --quiet - $tmpfile" ;;
            *.zstd) CMP="zstdcat $resultfile | cmp --quiet - $tmpfile" ;;
            *) CMP="cmp --quiet $resultfile $tmpfile" ;;
        esac
        $PROG -c ../cnf/grib.conf -o $tmpfile $f
        eval $CMP
        ERR=$?
        printf '%-60s' "$name"
        if [[ $ERR -eq 0 ]]; then
	    echo OK
	    rm -f $tmpfile
        else
	    errors=$(($errors+1))
	    echo FAILED
	    $QDINFO -a -q $resultfile > ${tmpfile}.info_ok
	    $QDINFO -a -q $tmpfile > ${tmpfile}.info_fail
	    diff -u ${tmpfile}.info_ok ${tmpfile}.info_fail | head -100
            rm -f ${tmpfile}.info_ok ${tmpfile}.info_fail
        fi
    fi
done

echo $errors errors
exit $errors
