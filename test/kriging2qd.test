#!/usr/bin/perl

use strict;
use warnings;
use lib ".";
use QDToolsTest;

my $program = (-x "../kriging2qd" ? "../kriging2qd" : "kriging2qd");

my $results = "results";

my $errors = 0;

my %usednames = ();

my $resultfile = "kriging.sqd";

DoTest("kriging","kriging","-t 202206081215 data/kriging.dat",$resultfile);

print "$errors errors\n";
exit($errors);


# ----------------------------------------------------------------------
# Run a single test
# ----------------------------------------------------------------------

sub DoTest
{
    my($text,$name,$arguments,$resultfile) = @_;

    if(exists($usednames{$name}))
    {
	print "Error: $name used more than once\n";
	exit(1);
    }
    $usednames{$name} = 1;

    my $cmd = "$program $arguments $results/$resultfile";

    my $expectedresult = "${resultfile}.ok";

    # print "$cmd\n";
    my $ret = system("$cmd >results/$resultfile 2>/dev/null");

    print padname($text);

    if($ret != 0)
    {
	++$errors;
	print " FAILED: return code $ret from '$cmd'\n";
    }
    elsif(! -e "results/$expectedresult")
    {
	++$errors;
	print " FAILED: TRUE RESULT results/$expectedresult MISSING\n";
	# unlink("$results/$resultfile");
    }
    else
    {
        my ($ok, $msg) = CheckQuerydataEqual("results/$resultfile", "results/$expectedresult", 0.0001);
        print " $msg\n";
        if (! $ok) {
            ++$errors;
        }
    }
}
