#!/usr/bin/perl

use strict;
use warnings;
use lib ".";
use QDToolsTest;

my $program = (-x "../qd2csv" ? "../qd2csv" : "qd2csv");

my $results = "results";

my $errors = 0;

my %usednames = ();

DoTest("defaults", "defaults", "data/".FindFile("data", "pointdata.sqd"));

print "$errors errors\n";
exit($errors);


# ----------------------------------------------------------------------
# Run a single test
# ----------------------------------------------------------------------

sub DoTest
{
    my($text,$name,$arguments) = @_;

    if(exists($usednames{$name}))
    {
	print "Error: $name used more than once\n";
	exit(1);
    }
    $usednames{$name} = 1;

    my $resultfile = FindResult($results, "qd2csv_$name");
    my $tmpfile = RemoveCompressionExt("$resultfile").".tmp";

    my $cmd = "$program $arguments 2>$tmpfile.out";
    #print "CMD: $cmd\n";
    my $ret = system("$cmd >$tmpfile 2>$tmpfile.stderr");

    print padname($text);
    if ($ret != 0)
    {
	++$errors;
        print " FAILED: return code $ret from '$cmd'\n";
        system("cat $tmpfile.stderr");
    }
    elsif(EqualFiles($resultfile, $tmpfile))
    {
	print " OK\n";
	unlink($tmpfile);
    }
    else
    {
	++$errors;
	print " FAILED!\n";
	print "( $resultfile <> $tmpfile in $results/ )\n";
    }

    unlink("$tmpfile.stderr") unless $ret != 0;
}
