#!/usr/bin/perl

use IO::Handle;
autoflush STDOUT 1;

$program = (-x "../qdset" ? "../qdset" : "qdset");

system('grep --quiet "#define WGS84 1" /usr/include/smartmet/newbase/NFmiGlobals.h');
$wgs84 = 1-($? >> 8);

$errors = 0;

DoSqdTest("qdset name and id",
	  "cp data/pal_xh.sqd results/qdset_pal_xh.sqd.tmp ; $program -n foobar -d 5 results/qdset_pal_xh.sqd.tmp Temperature",
	  "qdset_pal_xh.sqd");

DoSqdTest("qdset station name and id",
	  "cp data/synop.sqd results/qdset_synop.sqd.tmp ; $program -w 2701 -W \"testi asema\" results/qdset_synop.sqd.tmp 5115",
	  "qdset_synop.sqd");

print "$errors errors\n";
exit($errors);

# ----------------------------------------------------------------------
# Run a single test, allowing for a small difference in sqd results
# ----------------------------------------------------------------------

sub DoSqdTest
{
    my($title,$command,$dataname) = @_;

    # Halutut tulokset ovat t‰‰ll‰

    my($resultfile) = "results/$dataname";

    # Saadut tulokset
    my($tmpfile) = "results/${dataname}.tmp";

    if($wgs84)
    {
	my($wgs84resultfile) = "${resultfile}.wgs84";
	if(-e $wgs84resultfile)
	{  $resultfile = $wgs84resultfile; }
    }

    # Aja k‰sky
    
    print padname($title);
    system("$command");

    # Vertaa tuloksia

    my($difference) = `../qddifference $resultfile $tmpfile`;
    $difference =~ s/^\s+//;
    $difference =~ s/\s+$//;

    if($difference < 0.00001)
    {
	print " OK (diff <= $difference)\n";
	# unlink($tmpfile);
    }
    else
    {
	++$errors;
	print " FAILED! (maxdiff = $difference)\n";
	print "( $resultfile <> $tmpfile)\n";
    }
}

# ----------------------------------------------------------------------
# Pad the given string to 70 characters with dots
# ----------------------------------------------------------------------

sub padname
{
    my($str) = @_[0];

    while(length($str) < 70)
    {
	$str .= ".";
    }
    return $str;
}

# ----------------------------------------------------------------------
# Compare two files
# ----------------------------------------------------------------------

sub equalcontent
{
    my($file1,$file2) = @_;

    # Files must exits

    if(!(-e $file1))
    { return 0; }
    if(!(-e $file2))
    { return 0; }

    # Read binary files and compare results

    open(FILE1,$file1);
    binmode(FILE1);
    read(FILE1,$buffer1,(stat(FILE1))[7]);
    close(FILE1);

    open(FILE2,$file2);
    binmode(FILE2);
    read(FILE2,$buffer2,(stat(FILE2))[7]);
    close(FILE2);

    return ($buffer1 eq $buffer2);
}

# ----------------------------------------------------------------------
